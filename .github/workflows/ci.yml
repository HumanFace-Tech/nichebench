name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.10.x, 3.11.x]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: 1.6.1
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: nichebench/.venv
        key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}

    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: |
        cd nichebench
        poetry install --no-interaction --no-ansi

    - name: Run tests
      run: |
        cd nichebench
        poetry run pytest --cov=nichebench --cov-report=xml

    - name: Run linting
      run: |
        cd nichebench
        poetry run flake8 nichebench/
        poetry run black --check .
        poetry run isort --check-only .
        poetry run mypy nichebench/

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./nichebench/coverage.xml
        fail_ci_if_error: true

  docker:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v4

    - name: Build Docker image
      run: docker compose build

    - name: Test Docker container
      run: |
        docker compose run --rm app poetry run nichebench --help
        docker compose run --rm app poetry run pytest
